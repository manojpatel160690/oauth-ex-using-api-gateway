apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
    tier: database
spec:
  selector: #mysql pod should contain same level
    matchLabels:
      app : postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres #must match 'Service' and 'Deployment' selector
        tier: database
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-db-credentials
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-db-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB_HOST_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB_HOST_NAME
            - name: POSTGRES_DB_USER_MS
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB_USER_MS
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-persistance-storage
      volumes:
        - name: postgres-persistance-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim